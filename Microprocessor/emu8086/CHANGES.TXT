


///////////////////////////////////////////////////////////////////////


                           "WHAT'S NEW"


///////////////////////////////////////////////////////////////////////


                     AND MOST IMPORTANT CHANGES


///////////////////////////////////////////////////////////////////////

0)

 ZERO ("0") PREFIX SPECIFIES OCTAL VALUES, FOR EXAMPLE:

	MOV AX, 0111	

 IS EQUIVALENT TO:

        MOV AX, 49H

 OR:

	MOV AX, 73


 ZERO PREFIX HAS NO EFFECT, WHEN ".RADIX 16" DIRECTIVE IS USED, FOR EXAMPLE:


	.RADIX 16

	MOV AX, 0111

 IS EQUIVALENT TO:

	MOV AX, 111H



WHEN ".RADIX 16" DIRECTIVE IS USED, "0B" PREFIX AND "D" SUFFIX

HAS NO EFFECT BECAUSE "B" AND "D" ARE HEXADECIMAL DIGITS

ANOTHER WAY TO SPECIFY AN OCTAL VALUE, IS BY USING "o" SUFFIX,

FOR EXAMPLE:

	MOV AX, 111o



///////////////////////////////////////////////////////////////////////


1)

 TO MAKE IN AND OUT INSTRUCTIONS REDIRECT INPUT/OUTPUT TO A FILE,

 IT IS REQUIRED TO SET IN EMU8086.INI:

	IO_TO_FILE=True

 AND TO ENABLE HARDWARE INTERRUPTS VIA FILE, IT IS REQUIRED TO SET:

	HARDWARE_INTERRUPTS=True


 EMU8086.HW AND EMU8086.IO (RELOCATED TO "DEVICES" FOLDER BY DEFAULT) 

 THIS CAN BE CHANGED IN EMU8086.INI, FOR EXAMPLE:

   EMUPORT=C:\EMU8086.IO

   HW_INTERRUPT_FILE=C:\EMU8086.HW


 (IF THESE FILES DO NOT EXIST THEY ARE CREATED ONCE ACCESSED BY "OUT"
  
  INSTRUCTION AND IF USED WITH "IN" INSTRUCTION, THESE FILES SHOULD

  BE CREATED MANUALLY )





///////////////////////////////////////////////////////////////////////


2)


 TO REPLACE BIOS USE "CUSTOM_MEMORY_MAP.INI" (NOT ".INF") WITH PARAMETERS:

   ADDRESS - FILENAME

   FOR EXAMPLE:
                                 

   0000:0000 - SYSTEM.BIN

   F000:0000 - ROM.BIN

   12AC - DATA.DAT


   (ADDRESS IS IN HEXADECIMAL FORMAT, IT CAN BE BOTH PHYSICAL OR LOGICAL)

   (THERE CAN BE UNLIMITED NUMBER OF ENTRIES)



///////////////////////////////////////////////////////////////////////


3)


  DEFAULT OPTIONAL PARAMETERS FOR THE MACRO, FOR EXAMPLE:


       M MACRO P1, P2, P3

	OPTIONS 1, 2, 3
	
	MOV AX, P1

	MOV CX, P2

	MOV DX, P3

       M ENDM


       M 10


       HLT
       HLT

       END





THAT IS:
	
IF P1, P2 OR P3 NOT SPECIFIED

THEY ARE REPLACED BY CORRESPONDING

OPTIONS PARAMETER (DEFAULTS)

IN THE ABOVE EXAMPLE, "1" CORRESPONDS TO PARAMETER P1

"2" TO P2, AND "3" TO P3 

(AND IT REPLACES P3 WHEN P3 IS NOT SPECIFIED)



///////////////////////////////////////////////////////////////////////


4) 


  EXTRA OR NO PARAMETERS NOW SUPPORTED FOR THE MACRO WITH "...", FOR EXAMPLE:


	M3 MACRO ...
	
		LOCAL OK, S1
		
		JMP OK
		
		S1 DB ..., 13, 10
		
		   DB "$"
		
		OK:
		
		PUSH DS
		PUSH CS
		PUSH DS
		
		MOV AH, 9
		MOV DX, OFFSET S1
		INT 21H
		
		POP DS
	
	M3 ENDM
	
	
	M3 "A", "B", "C"
	
	M3
	
	MOV AH, 7
	INT 21H
	
	HLT
	HLT
	
	END



///////////////////////////////////////////////////////////////////////


5)


CONSTANTS REDEFINITION NOW POSSIBLE, FOR EXAMPLE:

	Q=0
	REPEAT 10
	MOV AX, Q
	Q=Q+1
	ENDM
	
	HLT
	HLT
	
	END



ANOTHER EXAMPLE:

	
	A=B
	
	MOV AL, A
	
	A=A+2
	
	MOV AX, [A]
	
	HLT
	HLT
	
	B DB 55H, 56H
	  DW 1234H
	
	END



///////////////////////////////////////////////////////////////////////


6)

	CALCULATOR NOW SUPPORTS STRING CONVERSION TO
	
	DECIMAL, HEXADECIMAL, OCTAL OR BINARY BYTE CHAIN
	
	
	TYPE A STRING, FOR EXAMPLE:
	
	"ABC"
	
	AND PRESS ENTER, RESULT SHOULD LOOK LIKE:	
	
	>65,66,67
	
	
	THIS BYTE-CHAIN CAN BE CONVERTED BACK TO ANSI STRING

        ">" PREFIX SPECIFIER IS USED TO DETERMINE IF EXPRESSION IS

        A BYTE-CHAIN


        SUPPORTING MULTI-LINE STRINGS, BUT WITHOUT (") INSIDE STRINGS



///////////////////////////////////////////////////////////////////////


7)

	RELEASE MODE

        SOURCE FILES CAN BE RENAMED TO HAVE "_" AS AN EXTENSION SUFFIX

        /MAX PARAMETER CAN BE USED FOR FULL SCREEN, FOR EXAMPLE:


        EMU8086 /MAX TEST.E86_

	(SCALING WORKS IN GRAPHICS MODE ONLY, INT 10H/AH=00H/AL=13H)


	AND INSTEAD OF EXTENSION SUFFIX /NODEBUG PARAMETER CAN BE USED,
	
	FOR EXAMPLE:

	EMU8086 /NODEBUG TEST.E86



///////////////////////////////////////////////////////////////////////


8)

	/CALC PARAMETER CAN BE USED TO LAUNCH CALCULATOR ONLY

	FOR EXAMPLE:

	EMU8086 /CALC

	DI COMMAND ENABLES THE ORIGINAL CALCULATOR (BASED ON C++)

	ABOUT BUTTON DESCRIBES THE DIFFERENCES BETWEEN CALCULATORS



///////////////////////////////////////////////////////////////////////


9)

	UNICODE AND UTF-8 FILES ARE OPENED IN READ-ONLY MODE

	FILES FROM CD OR DVD-ROM ARE OPENED IN READ-ONLY MODE

	AND FILES OVER 65K ARE ALSO OPENED IN READ-ONLY MODE

	(INCLUDE DIRECTIVE CAN BE USED TO OVERCOME 65K LIMIT)

	TO INCLUDE THE SAME FILE MORE THAN ONCE, USE /F SWITCH,

	FOR EXAMPLE:

	INCLUDE TEST.INC /F



///////////////////////////////////////////////////////////////////////


10)

	UNLIMITED NUMBER OF BREAKPOINTS	WITH (F9) KEY

	AND WHEN "STOP ON CONDITION" (F11) IS SET TO TEXT

	CAN STOP EVEN ON COMMENTS THAT CONTAIN SPECIFIED TEXT



///////////////////////////////////////////////////////////////////////


11)

       NEW INTERRUPTS:


       TRAP FLAG CAN BE USED TO INVOKE INT 01H  (CPU GENERATED SINGLE STEP)

       (BIT 8 OF FLAGS REGISTER) (HANDLER IS CUSTOMIZABLE)


       INT 03H (BREAK POINT)    WHEN ENCOUNTERED IT STOPS THE EMULATOR

       (UNLESS DEFAULT ADDRESS IS OVERWRITTEN IN INTERRUPT VECTOR TABLE)


       INT 0FFH/AH=0FDH SHOWS THE SCREEN WINDOW (NORMILIZED)

       INT 0FFH/AH=0FEH SHOWS AND MAXIMIZES THE SCREEN WINDOW 

       INT 0FFH/AH=0FFH STOPS THE EMULATOR AND CLOSES THE SCREEN WINDOW



       
       DEFAULT INTERRUPT HANDLER FOR UNKNOWN OR UNIMPLEMENTED INTERRUPTS

       IS LOCATED AT ADDRESS 0F400H:0100H 

       (CURRENTLY IT'S INT 0FEH = DEFAULT HANDLER FOR ALL)
	




///////////////////////////////////////////////////////////////////////


12)

       12H - GRAPHICAL MODE. 80X60 CHARACTERS.

             256 COLORS, 640X480 PIXELS. 1 PAGE.  

       (THIS MODE IS NOT 100% COMPATIBLE WITH THE ORIGINAL IBM PC OR DOSBOX)


; VIDEO PAGE START: 0A0000H

; VIDEO PAGE SIZE: 640*480 = 307200 BYTES (1 BYTE PER PIXEL)

; USING FIVE SCREEN SEGMENTS:

; FIRST SEGMENT  0A000H

; SECOND SEGMENT 0B000H

; THIRD SEGMENT  0C000H

; FOURTH SEGMENT 0D000H

; FIFTH SEGMENT  0E000H  (LAST SEGMENT) 

; ADDRESS OF FIRST PIXEL: 0A000H:0000H

; ADDRESS OF LAST PIXEL: 0E000H:0AFFFH


; THERE ARE TWO WAYS TO SET A PIXEL COLOR,

; FIRST USING DIRECT MEMORY ACCESS AND

; SECOND USING INT 10H/AH=0CH BIOS SUB-FUNCTION


; EXAMPLE:




MOV AH, 0             ; SET VIDEO MODE

MOV AL, 12H           ; VIDEO MODE NUMBER

INT 10H


; DRAW FIRST PIXEL

MOV AX, 0A000H        ; SEGMENT

MOV DS, AX

MOV BX, 0             ; PIXEL ADDRESS

MOV [BX], 52          ; PIXEL COLOR


; DRAW MIDDLE PIXEL

MOV AH, 0CH           ; SET PIXEL SUB-FUNCTION NUMBER

MOV AL, 52            ; PIXEL COLOR (0..255)

MOV CX, 640/2         ; ROW

MOV DX, 480/2         ; COLUMN

INT 10H


; DRAW LAST PIXEL

MOV AX, 0E000H

MOV DS, AX

MOV BX, 0AFFFH        ; PIXEL ADDRESS

MOV [BX], 52          ; PIXEL COLOR

END


;
; NOTES:
;
;   TEXT OUTPUT IS SUPPORTED IN THIS MODE, BUT
;
;   BLINKING IS DISABLED (SINCE ALL 8 ATTRIBUTE BITS ARE USED AS TEXT COLOR)
;
;   AND THERE IS NO AUTOMATIC SCROLLING IN TELETYPE MODE
;



///////////////////////////////////////////////////////////////////////


13)

       TO ACCESS WORDS DEFINED BY DD DIRECTIVE (DOUBLE WORD)

       IT IS REQUIRED TO USE "WORD PTR" PREFIX, FOR EXAMPLE:

		
		MOV AX, WORD PTR A
		MOV BX, WORD PTR A+2
		
		
		HLT
		HLT
		
		A DD 12345678H
		
		
		END
		
		

///////////////////////////////////////////////////////////////////////


14)       
 
       SCREEN SIZE AND SCALING IS ADJUSTABLE THROUGH EMU8086.INI
        

       FOR EXAMPLE:

		SCREEN_FONT_SIZE=13.5

		SCREEN_SCALE_FACTOR_FOR_GRAPHICS_MODE_12H=2

		SCREEN_SCALE_FACTOR_FOR_GRAPHICS_MODE_13H=2


       (IF NOT EXIST, PROPER EMU8086.INI IS AUTO-CREATED)
        
       (RESTART IS REQUIRED FOR CHANGES TO TAKE EFFECT)


       NOTES:

       CURRENTLY SCALING IS FOR GRAPHICS MODES ONLY (12H AND 13H)



///////////////////////////////////////////////////////////////////////


15)

	INT 10H / AX = 4F02H 

	SET VIDEO MODE 
	
	INPUT:
	
	 BX = 0101H   ;  640 X 480 X 256 COLORS



///////////////////////////////////////////////////////////////////////


16)

	INT 10H / AX = 4F05H
	
	
	SET/GET VIDEO PAGE SEGMENT  (EXTENDED MEMORY ACCESS)
	
	INPUT:
	
	 BH = 0 (SET)
	
	 BH = 1 (GET)
	
	 DX = MOST SIGNIFICANT WORD OF PIXEL ADDRESS (0 TO 4)
	
	RETURNS:
	
	 (WHEN BH = 1)
	
	      DX = MOST SIGNIFICANT WORD OF PIXEL ADDRESS (0 TO 4)


	THIS FORMULA IS USED TO CALCULATE PHYSICAL ADDRESS:

	(0A000H * 16) + (DX * 65536)

		(DX = 7..07FF5H  FREE EXTENDED MEMORY)

		(DX = 5..6  RESERVED BIOS AREA)

		(DX = 0..4  VIDEO MEMORY)

	MAX_MEMORY SETTING (IN EMU8086.INI) CAN BE SET TO ANY VALUE

	FROM 1114555 (DEFAULT) TO 2147483647

	THE ADDRESS RECALCULATION WORKS IN GRAPHICS MODES ONLY:

	INT 10H/AX=4F02H/BX=0101H   AND   INT 10H/AH=0/AL=12H



///////////////////////////////////////////////////////////////////////


17)

	"E" COMMAND IN DBG WINDOW ALLOWS TO EDIT INDIVIDUAL BYTES AND
	
	BYTE CHAINS. ANOTHER WAY TO EDIT MEMORY DIRECTLY IS TO DOUBLE
	
	CLICK MEMORY LIST ITEMS OR USE RAM BUTTON AND TYPE OVER EXISTING
	
	VALUES. 

	
	"E" COMMAND SYNTAX IS:
	
	E ADDRESS [VALUE OR LIST OF VALUES]

	
	IF NO VALUE IS SPECIFIED, THE COMMAND SHOWS CURRENT BYTE STATUS
	
	AND OFFER TO REWRITE IT, LIKE THIS "55." ANY HEXADECIMAL BYTE VALUE
	
	ENTERED AFTER THE DOT WILL OVERWRITE EXISTING MEMORY CONTENTS

	AT THAT ADDRESS; A LIST OF VALUES CAN BE ENTERED AS WELL, FOR EXAMPLE:
	

	E DS:100 1,2,3,4,5,6,7,8,9,A

	
	(NOTE: ALL VALUES ARE HEXADECIMAL AND REQUIRE NO PREFIX NOR SUFFIX)
	
	(IN THE ABOVE EXAMPLE "A" REFERS TO A HEXADECIMAL NUMBER 0AH)

	VALUES CAN BE SEPARATED BOTH BY "," OR " "

	VARIABLE NAMES CAN BE USED AS AN ADDRESS PARAMETER, FOR EXAMPLE:


	E DS:VAR1

	

///////////////////////////////////////////////////////////////////////


18)

	PALETTE.INI CAN BE USED TO DEFINE CUSTOM COLORS FOR GRAPHICS MODE

	HEXADECIMAL NUMBERS REQUIRE "&H" PREFIX, FOR EXAMPLE:

	&HC0C0C0

	THIS IS EQUIVALENT TO RGB(192,192,192) OR 12632256

	THERE ARE A TOTAL OF 16,777,215 COLORS TO CHOOSE FROM



///////////////////////////////////////////////////////////////////////


19)

	NEW COMMANDS FOR DBG WINDOW: 
	
	"SCREEN" - DISPLAYS INFORMATION ABOUT CURRENT VIDEO MODE

	"AUTOSCREEN" - ENABLES/DISABLES INFO AND AUTOMATIC BENCHMARK

	"ALU2" - ENABLES/DISABLES ALTERNATIVE ARITHMETIC AND LOGIC UNIT

	(ALU2 IS ABOUT 2 TIMES FASTER OF THE ORIGINAL ALU)



///////////////////////////////////////////////////////////////////////


20)

	PORTS 03C8H (BYTE) AND 03C9H (BYTE) CAN BE USED 

	TO SET 256 COLOR CUSTOM RGB PALETTE, FOR EXAMPLE:


	MOV DX, 03C8H

	MOV AL, 255

	OUT DX, AL	; COLOR ID 255

	INC DX		; DX = 03C9

	OUT DX, AL	; R
	
	OUT DX, AL	; G

	OUT DX, AL	; B

			; COLOR ID 255 IS NOW RGB(255,255,255) = WHITE
	
	END



///////////////////////////////////////////////////////////////////////


21)

	LOCAL FUNCTION VARIABLES AND LABELS CAN BE DECLARED USING @@ PREFIX,

	FOR EXAMPLE:


	CALL F1

	CALL F2

	RET
	
	F1 PROC NEAR
	
		CMP AX, 1
	
		JE @@OK

		MOV AX, @@A

		@@OK:

		RET

		@@A DW 1234H

	F1 ENDP


	F2 PROC NEAR
	
		CMP AX, 1234H
	
		JNE @@OK

		MOV AX, @@A

		@@OK:

		RET

		@@A DW 5678H


	F2 ENDP

	END



///////////////////////////////////////////////////////////////////////


22)

	@@ PREFIX CAN ALSO BE USED TO DECLARE LOCAL MACRO VARIABLES
	
	(ALONG WITH LOCAL DIRECTIVE) FOR EXAMPLE:


	A

	A

	RET


	A MACRO
		LOCAL C

		MOV AX, @@B

		MOV BX, C
	
		JMP @@X
	
		@@B DW 1243H

		C DW 5768H
		
		@@X:

	A ENDM

	END



///////////////////////////////////////////////////////////////////////


23)

	SO, AS YOU ALREADY KNOW, THERE IS ANOTHER WAY TO DECLARE LOCAL

	VARIABLES AND LABELS IS WITH LOCAL DIRECTIVE, FOR EXAMPLE:



	CALL A
	
	CALL B
	
	HLT
	HLT
	
	
	
	A PROC NEAR
	
	LOCAL X, E, F

	LOCAL D
	
	MOV AX, X
	
	RET
	
	X DW 1234H

	D DW 5434H

	E DB 52H

	F DB 22H
	
	A ENDP
	
	
	
	B PROC NEAR
	
	LOCAL X, E, F

	LOCAL D, G
	
	MOV AX, X
	
	RET
	
	X DW 5647H

	D DW 4324H

	E DB 53H

	F DB 34H

	G DB 31H
	
	B ENDP
	
	
	END



///////////////////////////////////////////////////////////////////////


24)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;
;     FUNCTION INSIDE FUNCTION AND LOCAL VARIABLES
;
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


CALL A

CALL B

; MOV BP, @@X1          ; INACCESSIBLE LOCAL VARIABLE

HLT
HLT



A PROC

LOCAL D

MOV BX, 1

MOV BX, D

MOV CX, @@X1


	B PROC

	LOCAL D1, OK
	
	INC BX
	
	MOV AX, BX

	; MOV DX, @@X1	; INACCESSIBLE LOCAL VARIABLE OF HOST-FUNCTION

	MOV DX, @@X2
	
	JMP OK

	D1 DW 2

	@@X2 DW 5223H

	OK:
	
	ENDP

; MOV BP, D1   ; INACCESSIBLE LOCAL VARIABLE OF SUB-FUNCTION


RET

D DW 1

@@X1 DW 1234H


ENDP


END



///////////////////////////////////////////////////////////////////////


25)

	ALTERNATIVE CALCULATOR SUPPORTS THESE FUNCTIONS

	SQRT(N)          ; CALCULATES SQUARE ROOT OF N

	POW(N, M)        ; CALCULATES N IN POWER OF M

	RGB(C1, C2, C3)  ; CALCULATES RGB VALUE (RED, GREEN, BLUE)



///////////////////////////////////////////////////////////////////////


26)



	AVAILABLE VIDEO MODES: 0H, 3H, 12H, 13H, 254, 255

	254 (0FEH) AND 255 (0FFH) ARE WINDOWS COLOR THEME COMPATIBLE VIDEO MODES.

	IN THESE VIDEO MODES, TEXT ATTRIBUTES ARE IGNORED, AND BLINKING IS DISABLED.



	MOV AH, 0

	MOV AL, 0FFH	; TEXT MODE 40 X 25 CHARACTERS (NO COLOR ATTRIBUTES)

	INT 10H

	END



	MOV AH, 0

	MOV AL, 0FEH	; TEXT MODE 80 X 25 CHARACTERS (NO COLOR ATTRIBUTES)

	INT 10H

	END
	


	TO ENABLE TEXT ATTRIBUTES AND BLINKING USE VIDEO MODES: 0H OR 3H



	MOV AH, 0

	MOV AL, 0	; TEXT MODE 40 X 25 CHARACTERS

	INT 10H

	END


	MOV AH, 0

	MOV AL, 3	; TEXT MODE 80 X 25 CHARACTERS

	INT 10H

	END






	
	MOV AX, 1003H	; BLINKING IN TEXT MODE
	
	MOV BX, 0	; DISABLE   (AND USE 16 COLORS FOR BACKGROUND)

	INT 10H

	END



	MOV AX, 1003H	; BLINKING IN TEXT MODE
	
	MOV BX, 1	; ENABLE (AND USE 7 COLORS FOR BACKGROUND)

	INT 10H

	END









	MOV AH, 0

	MOV AL, 12H	; GRAPHICS MODE 640 X 480 PIXELS (256 COLORS)

	INT 10H

	END




	MOV AX, 4F02H	; GRAPHICS MODE (IDENTICAL TO INT 10H/AH=0/AL=12H)
	
	MOV BX, 0101H	;  640 X 480 PIXELS (256 COLORS)

	INT 10H

	END




	MOV AH, 0

	MOV AL, 13H	; GRAPHICS MODE 320 X 200 PIXELS (256 COLORS)

	INT 10H

	END


	



///////////////////////////////////////////////////////////////////////


27)

	PRINTING TRANSPARENT TEXT IN GRAPHICS MODE USING INT 10H/AH=13H

	UNLESS TRANSPARENT_TEXT_IN_GRAPHICS_MODES = FALSE IN EMU8086.INI

	(AND IF IT IS SET FALSE, THE ATTRIBUTE IS DIVIDED INTO TWO NIBBLES,

	BACKGROUND AND FOREGROUND COLOR)


	GRAPHICS MODES USE DEFAULT WINDOWS BACKGROUND, UNLESS

	BLACK_SCREEN_FOR_GRAPHICS_MODES=TRUE IN EMU8086.INI


	TEXT MODE 255 USES DEFAULT WINDOWS COLORS AND NO ATTRIBUTES,

	OTHER MODES RELY ON ATTRIBUTES, BUT SETTING WHITE_SCREEN_FOR_TEXT_MODE=TRUE

	IN EMU8086.INI, INSURES THE DEFAULT ATTRIBUTES ARE BLACK ON WHITE BACKGROUND

	DEFAULT_ATTRIB CAN ALSO BE SET INDEPENDENTLY BUT, WHITE_SCREEN_FOR_TEXT_MODE

	SETTING HAS PRIORITY WHEN IT IS SET TO TRUE.



///////////////////////////////////////////////////////////////////////


28)

;
; DEFINE QUADRO WORD (8 BYTES) (4 WORDS) (64 BITS)
;

V1 DQ	9,223,372,036,854,775,807

V2 DQ	-9,223,372,036,854,775,808

V3 DQ	18,446,744,073,709,551,615


;
; DEFINE TERRA WORD (10 BYTES) (5 WORDS) (80 BITS)
;

V4 DT	604,462,909,807,314,587,353,087

V5 DT	-604,462,909,807,314,587,353,088

V6 DT	1,208,925,819,614,629,174,706,175

END


TO ACCESS VALUES DEFINED BY DD, DQ AND DT, SHOULD USE "WORD PTR" OR "BYTE PTR",

FOR EXAMPLE:

MOV WORD PTR V1, AX

; OR

MOV W.V1, BX

END


"WORD PTR" MAY NOT BE REQUIRED IF "ALLOW_DD_DQ_DT_DIRECT_ACCESS=TRUE"

IS SET IN EMU8086.INI, BUT "BYTE PTR" OR "B." STILL HAVE TO BE USED WHEN ACCESSING

INDIVIDUAL BYTES OF THE DEFINED DD, DQ OR DT VALUES, FOR EXAMPLE:

MOV BYTE PTR V2, CL

MOV B.V2, AH

END



///////////////////////////////////////////////////////////////////////


29)



 NUMBERS DEFINITION SUMMARY.


THERE ARE THREE WAYS TO DEFINE BINARY NUMBERS:

; 1) USING "0B" PREFIX:

MOV AX, 0B1110_1101_1001_1111

END


; 2) USING "B" SUFFIX:

MOV AX, 1001_1111_0110_1100B

END

; 3) USING ".RADIX 2" DIRECTIVE:

.RADIX 2

MOV AX, 1010_0111_1111_0011

END



THERE ARE THREE WAYS TO DEFINE OCTAL NUMBERS:


; 1) USING "o" SUFFIX:

MOV AX, 1234o

END

; 2) USING "0" (ZERO) PREFIX:

MOV AX, 01234

END

; 3) USING ".RADIX 8" DIRECTIVE:

.RADIX 8

MOV AX, 1234

END


AND THERE ARE THREE WAYS TO DEFINE HEXADECIMAL NUMBERS:

; 1) USING "H" SUFFIX:

MOV AX, 5B2CH

END

; 2) USING "0X" PREFIX:

MOV AX, 0XAB4D

END

; 3) USING ".RADIX 16" DIRECTIVE:

.RADIX 16

MOV AX, 1A3F

END



///////////////////////////////////////////////////////////////////////



30)

	FINAL NOTES:


	"_" CAN BE USED TO SEPARATE DIGIT GROUPS ANYWHERE

	"," IS GENERALLY USED TO SEPARATE FUNCTION AND INSTRUCTION ARGUMENTS

	BUT IT IS EXCEPTIONALLY USED AS A DIGIT SEPARATOR FOR DQ AND DT DIRECTIVES

	ALONG WITH A STANDARD "_" DIGIT SEPARATOR;


	DQ AND DT ARE THE ONLY DIRECTIVES THAT DO NOT SUPPORT DUP() 

	SUB-DIRECTIVE, NOR DO THESE DIRECTIVES SUPPORT SEVERAL ARGUMENTS.


	QWORD AND TWORD ARE THE ONLY TWO TYPES THAT ARE SHOWN WITH

	DIGIT SEPARATOR AS "," IN VARIABLES WINDOW.

	
	ELEMENTS SETTING IN VARIABLES WINDOW CAN BE USED FOR ANY TYPES EXCEPT

	FOR DQ AND DT, AND THESE TYPES ARE LIMITED TO A SINGLE ELEMENT, WHEN THEY

	ARE SHOWN IN THE VARIABLES WINDOW.


	DB DW AND DD DO SUPPORT EXPRESSIONS, FOR EXAMPLE:

	V1 DB 5*2

	V2 DW 5*3

	V3 DD 4*7

	END


	HOWEVER, DQ AND DT DIRECTIVES DO NOT SUPPORT EXPRESSIONS IN DEFINITION.



///////////////////////////////////////////////////////////////////////






